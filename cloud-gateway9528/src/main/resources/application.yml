server:
  port: 9528

eureka:
  client:
    # true表示将自己注册经Eureka Server，默认为true
    register-with-eureka: true
    # true表示从Eureka抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      # 设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址
      # defaultZone: http://localhost:7001/eureka/ 单机版
      # 集群版
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      routes:
        - id: paymentRoute  #paymentRoute    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service  #匹配后提供服务的路由地址
          # predicate 就是为了实现一组匹配规则，让请求过来找到对应的Route进行处理
          predicates:
            - Path=/payment/getPaymentById/**    # 断言，路径相匹配的进行路由
            # 三个属性  After、Before、Between
            - After=2020-10-23T15:37:05.637+08:00[Asia/Shanghai]  # 在这个时间点之前访问不到该路径 404
            # - Cookie=username,ice   # 需要带上cookie进行访问  例如：curl http://localhost:9527/payment/get/16 --cookie "username=ice"
#            - Header=X-Request-Id, \d+   #请求头要有X-Request-Id属性并且值为整数的正则表达式
#            - Host=**.atguigu.com   #主机名以atguigu.com结束
            - Method=GET      # 必须是get请求
#            - Query=username, \d+   # 要有参数名username并且值为整数

        - id: paymentRoute2  #paymentRoute    #路由的ID，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service  #匹配后提供服务的路由地址
          # predicate 就是为了实现一组匹配规则，让请求过来找到对应的Route进行处理
          predicates:
            - Path=/payment/lb/**    # 断言，路径相匹配的进行路由